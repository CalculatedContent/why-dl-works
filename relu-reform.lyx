#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
Basic idea to reformulate Recitfied Linear Unit (ReLu)
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
ReLu(x)=ln(1+exp(x))
\]

\end_inset


\end_layout

\begin_layout Standard
In an MLP, from one layer to the next, each node activation 
\begin_inset Formula $\mathbf{z}=\mathbf{Wh}+\mathbf{b}$
\end_inset


\end_layout

\begin_layout Standard
WLOG, let the bias 
\begin_inset Formula $\mathbf{b}=0$
\end_inset

.
 Also, assume ReLu is applied elementwise to the vector 
\begin_inset Formula $\mathbf{z}$
\end_inset


\end_layout

\begin_layout Standard
Then, for each activated node 
\begin_inset Formula $\mathbf{n}_{i}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
n_{i}=ReLu(\mathbf{z}_{j})=ln(1+exp((\mathbf{Wh})_{j})
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=ln(1+exp((\sum_{i}\mathbf{W_{ij}h_{i}}))
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=ln(1+\prod_{i}exp((\mathbf{W_{ij}h_{i}}))
\]

\end_inset


\end_layout

\begin_layout Standard
Which seems intractable
\end_layout

\begin_layout Standard
But
\end_layout

\begin_layout Standard
What if want consider 
\begin_inset Formula $Relu(\mathbf{z}_{j})$
\end_inset

 in Expectation 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\mathbb{E}[Relu(\mathbf{z}_{j})]
\]

\end_inset


\end_layout

\begin_layout Standard
we assume that each activated node exists in a superposition of 2 states
 [0,1]
\end_layout

\begin_layout Standard
what I want to do is somehow get the superposition inside the log, so that
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\mathbb{E}[Relu(\mathbf{z}_{j})]\approx ln(\mathbb{E}[1+exp((\mathbf{Wh})_{j}])
\]

\end_inset


\end_layout

\begin_layout Standard
this is kindof like the annealed approximation in spin glass theoryâ€“which
 is not a great approximation, but perhaps, can give some initial insight
\end_layout

\begin_layout Standard
that is
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\mathbb{E}[ln\mathbf{Z}]\approx ln(\mathbb{E}[\mathbf{Z}])
\]

\end_inset


\end_layout

\begin_layout Standard
which is not generally true for spin glasses, and why we use replica theory,
 cavity method, etc
\end_layout

\begin_layout Standard
Also, lets introduce an internal state vector 
\begin_inset Formula $\mathbf{c}=[0,1]$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
ln(\mathbb{E}[1+exp((\mathbf{Wh})_{j}])=ln(\mathbb{E}[exp((\mathbf{c^{T}}\mathbf{Wh})_{j}])
\]

\end_inset


\end_layout

\begin_layout Standard
and we can get something like
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\mathbb{E}[Relu(\mathbf{z}_{j})]\approx ln(\mathbb{E}[exp((\mathbf{c^{T}}\mathbf{Wh})_{j}])
\]

\end_inset


\end_layout

\begin_layout Standard
We now pull the expecation back out...
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\approx\mathbb{E}[ln(exp((\mathbf{c^{T}}\mathbf{Wh})_{j})]
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\approx\mathbb{E}[\mathbf{(c^{T}}\mathbf{Wh)}{}_{j}]
\]

\end_inset


\end_layout

\begin_layout Standard
So obviously this is very sloppy, but it is an attempt to get at defining
 some kind of (linearized) free energy for each layer
\end_layout

\end_body
\end_document
